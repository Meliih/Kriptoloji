{
	"id": "49688a528f24afd6d4de3e9e4fe60ac8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeferredEquityPlan.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n// lvl 3: equity plan\r\ncontract DeferredEquityPlan {\r\n    address human_resources;\r\n\r\n    address payable employee; // bob\r\n    bool active = true; // this employee is active at the start of the contract\r\n\r\n    // @TODO: Set the total shares and annual distribution\r\n    // Your code here!\r\n    uint total_shares = 1000;\r\n    uint annual_distribution = 250;\r\n    uint start_time = now; // permanently store the time this contract was initialized\r\n\r\n    // @TODO: Set the `unlock_time` to be 365 days from now\r\n    // Your code here!\r\n    uint unlock_time = now;\r\n    uint public distributed_shares = 0; // starts at 0\r\n\r\n    constructor(address payable _employee) public {\r\n        human_resources = msg.sender;\r\n        employee = _employee;\r\n    }\r\n\r\n    function distribute() public {\r\n        require(msg.sender == human_resources || msg.sender == employee, \"You are not authorized to execute this contract.\");\r\n        require(active == true, \"Contract not active.\");\r\n\r\n        // @TODO: Add \"require\" statements to enforce that:\r\n        // 1: `unlock_time` is less than or equal to `now`\r\n        // 2: `distributed_shares` is less than the `total_shares`\r\n        // Your code here!\r\n        require (unlock_time <= now ,\"ne ula\" );\r\n        require (distributed_shares <= total_shares, \"bu nedir lo\");\r\n        // @TODO: Add 365 days to the `unlock_time`\r\n        // Your code here!\r\n        unlock_time += 365;\r\n        // @TODO: Calculate the shares distributed by using the function (now - start_time) / 365 days * the annual distribution\r\n        // Make sure to include the parenthesis around (now - start_time) to get accurate results!\r\n        // Your code here!\r\n\r\n        // double check in case the employee does not cash out until after 5+ years\r\n        if (distributed_shares > 1000) {\r\n            distributed_shares = 1000;\r\n        }\r\n    }\r\n\r\n    // human_resources and the employee can deactivate this contract at-will\r\n    function deactivate() public {\r\n        require(msg.sender == human_resources || msg.sender == employee, \"You are not authorized to deactivate this contract.\");\r\n        active = false;\r\n    }\r\n\r\n    // Since we do not need to handle Ether in this contract, revert any Ether sent to the contract directly\r\n    function() external payable {\r\n        revert(\"Do not send Ether to this contract!\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DeferredEquityPlan.sol": {
				"DeferredEquityPlan": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_employee",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deactivate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "distribute",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "distributed_shares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/DeferredEquityPlan.sol\":50:2384  contract DeferredEquityPlan {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DeferredEquityPlan.sol\":169:173  true */\n  0x01\n    /* \"contracts/DeferredEquityPlan.sol\":155:173  bool active = true */\n  dup1\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeferredEquityPlan.sol\":342:346  1000 */\n  0x03e8\n    /* \"contracts/DeferredEquityPlan.sol\":322:346  uint total_shares = 1000 */\n  0x02\n  sstore\n    /* \"contracts/DeferredEquityPlan.sol\":380:383  250 */\n  0xfa\n    /* \"contracts/DeferredEquityPlan.sol\":353:383  uint annual_distribution = 250 */\n  0x03\n  sstore\n    /* \"contracts/DeferredEquityPlan.sol\":408:411  now */\n  timestamp\n    /* \"contracts/DeferredEquityPlan.sol\":390:411  uint start_time = now */\n  0x04\n  sstore\n    /* \"contracts/DeferredEquityPlan.sol\":584:587  now */\n  timestamp\n    /* \"contracts/DeferredEquityPlan.sol\":565:587  uint unlock_time = now */\n  0x05\n  sstore\n    /* \"contracts/DeferredEquityPlan.sol\":627:628  0 */\n  0x00\n    /* \"contracts/DeferredEquityPlan.sol\":594:628  uint public distributed_shares = 0 */\n  0x06\n  sstore\n    /* \"contracts/DeferredEquityPlan.sol\":652:776  constructor(address payable _employee) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/DeferredEquityPlan.sol\":652:776  constructor(address payable _employee) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/DeferredEquityPlan.sol\":652:776  constructor(address payable _employee) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/DeferredEquityPlan.sol\":727:737  msg.sender */\n  caller\n    /* \"contracts/DeferredEquityPlan.sol\":709:724  human_resources */\n  0x00\n  dup1\n    /* \"contracts/DeferredEquityPlan.sol\":709:737  human_resources = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeferredEquityPlan.sol\":759:768  _employee */\n  dup1\n    /* \"contracts/DeferredEquityPlan.sol\":748:756  employee */\n  0x01\n  0x00\n    /* \"contracts/DeferredEquityPlan.sol\":748:768  employee = _employee */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeferredEquityPlan.sol\":652:776  constructor(address payable _employee) public {\r... */\n  pop\n    /* \"contracts/DeferredEquityPlan.sol\":50:2384  contract DeferredEquityPlan {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeferredEquityPlan.sol\":50:2384  contract DeferredEquityPlan {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51b42b00\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9bc717f1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe4fc6b6d\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"contracts/DeferredEquityPlan.sol\":2328:2373  revert(\"Do not send Ether to this contract!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_68f702e6388d2518088e18365eaa062fd5393371528035cdd118dd91cf2fd66b\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeferredEquityPlan.sol\":1979:2171  function deactivate() public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/DeferredEquityPlan.sol\":1979:2171  function deactivate() public {\r... */\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/DeferredEquityPlan.sol\":594:628  uint public distributed_shares = 0 */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"contracts/DeferredEquityPlan.sol\":594:628  uint public distributed_shares = 0 */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeferredEquityPlan.sol\":784:1893  function distribute() public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/DeferredEquityPlan.sol\":784:1893  function distribute() public {\r... */\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/DeferredEquityPlan.sol\":1979:2171  function deactivate() public {\r... */\n    tag_9:\n        /* \"contracts/DeferredEquityPlan.sol\":2041:2056  human_resources */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":2027:2056  msg.sender == human_resources */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":2027:2037  msg.sender */\n      caller\n        /* \"contracts/DeferredEquityPlan.sol\":2027:2056  msg.sender == human_resources */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeferredEquityPlan.sol\":2027:2082  msg.sender == human_resources || msg.sender == employee */\n      dup1\n      tag_17\n      jumpi\n      pop\n        /* \"contracts/DeferredEquityPlan.sol\":2074:2082  employee */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":2060:2082  msg.sender == employee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":2060:2070  msg.sender */\n      caller\n        /* \"contracts/DeferredEquityPlan.sol\":2060:2082  msg.sender == employee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeferredEquityPlan.sol\":2027:2082  msg.sender == human_resources || msg.sender == employee */\n    tag_17:\n        /* \"contracts/DeferredEquityPlan.sol\":2019:2138  require(msg.sender == human_resources || msg.sender == employee, \"You are not authorized to deactivate this contract.\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_44fe763b3ac121d9373b3116501483b74bc02ac33c1be16c96619643c2e17c04\n      0x33\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/DeferredEquityPlan.sol\":2158:2163  false */\n      0x00\n        /* \"contracts/DeferredEquityPlan.sol\":2149:2155  active */\n      0x01\n      0x14\n        /* \"contracts/DeferredEquityPlan.sol\":2149:2163  active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeferredEquityPlan.sol\":1979:2171  function deactivate() public {\r... */\n      jump\t// out\n        /* \"contracts/DeferredEquityPlan.sol\":594:628  uint public distributed_shares = 0 */\n    tag_12:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/DeferredEquityPlan.sol\":784:1893  function distribute() public {\r... */\n    tag_15:\n        /* \"contracts/DeferredEquityPlan.sol\":846:861  human_resources */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":832:861  msg.sender == human_resources */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":832:842  msg.sender */\n      caller\n        /* \"contracts/DeferredEquityPlan.sol\":832:861  msg.sender == human_resources */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeferredEquityPlan.sol\":832:887  msg.sender == human_resources || msg.sender == employee */\n      dup1\n      tag_20\n      jumpi\n      pop\n        /* \"contracts/DeferredEquityPlan.sol\":879:887  employee */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":865:887  msg.sender == employee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":865:875  msg.sender */\n      caller\n        /* \"contracts/DeferredEquityPlan.sol\":865:887  msg.sender == employee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DeferredEquityPlan.sol\":832:887  msg.sender == human_resources || msg.sender == employee */\n    tag_20:\n        /* \"contracts/DeferredEquityPlan.sol\":824:940  require(msg.sender == human_resources || msg.sender == employee, \"You are not authorized to execute this contract.\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ba2ee6ca50d86582f4490a3252728de9a213982133b99a8712775a266ab39acb\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/DeferredEquityPlan.sol\":969:973  true */\n      0x01\n        /* \"contracts/DeferredEquityPlan.sol\":959:973  active == true */\n      iszero\n      iszero\n        /* \"contracts/DeferredEquityPlan.sol\":959:965  active */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DeferredEquityPlan.sol\":959:973  active == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/DeferredEquityPlan.sol\":951:998  require(active == true, \"Contract not active.\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f6e7472616374206e6f74206163746976652e000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/DeferredEquityPlan.sol\":1252:1255  now */\n      timestamp\n        /* \"contracts/DeferredEquityPlan.sol\":1237:1248  unlock_time */\n      sload(0x05)\n        /* \"contracts/DeferredEquityPlan.sol\":1237:1255  unlock_time <= now */\n      gt\n      iszero\n        /* \"contracts/DeferredEquityPlan.sol\":1228:1267  require (unlock_time <= now ,\"ne ula\" ) */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6520756c610000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/DeferredEquityPlan.sol\":1309:1321  total_shares */\n      sload(0x02)\n        /* \"contracts/DeferredEquityPlan.sol\":1287:1305  distributed_shares */\n      sload(0x06)\n        /* \"contracts/DeferredEquityPlan.sol\":1287:1321  distributed_shares <= total_shares */\n      gt\n      iszero\n        /* \"contracts/DeferredEquityPlan.sol\":1278:1337  require (distributed_shares <= total_shares, \"bu nedir lo\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6275206e65646972206c6f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"contracts/DeferredEquityPlan.sol\":1444:1447  365 */\n      0x016d\n        /* \"contracts/DeferredEquityPlan.sol\":1429:1440  unlock_time */\n      0x05\n      0x00\n        /* \"contracts/DeferredEquityPlan.sol\":1429:1447  unlock_time += 365 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeferredEquityPlan.sol\":1828:1832  1000 */\n      0x03e8\n        /* \"contracts/DeferredEquityPlan.sol\":1807:1825  distributed_shares */\n      sload(0x06)\n        /* \"contracts/DeferredEquityPlan.sol\":1807:1832  distributed_shares > 1000 */\n      gt\n        /* \"contracts/DeferredEquityPlan.sol\":1803:1886  if (distributed_shares > 1000) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/DeferredEquityPlan.sol\":1870:1874  1000 */\n      0x03e8\n        /* \"contracts/DeferredEquityPlan.sol\":1849:1867  distributed_shares */\n      0x06\n        /* \"contracts/DeferredEquityPlan.sol\":1849:1874  distributed_shares = 1000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeferredEquityPlan.sol\":1803:1886  if (distributed_shares > 1000) {\r... */\n    tag_25:\n        /* \"contracts/DeferredEquityPlan.sol\":784:1893  function distribute() public {\r... */\n      jump\t// out\n    stop\n    data_44fe763b3ac121d9373b3116501483b74bc02ac33c1be16c96619643c2e17c04 596f7520617265206e6f7420617574686f72697a656420746f2064656163746976617465207468697320636f6e74726163742e\n    data_68f702e6388d2518088e18365eaa062fd5393371528035cdd118dd91cf2fd66b 446f206e6f742073656e6420457468657220746f207468697320636f6e747261637421\n    data_ba2ee6ca50d86582f4490a3252728de9a213982133b99a8712775a266ab39acb 596f7520617265206e6f7420617574686f72697a656420746f2065786563757465207468697320636f6e74726163742e\n\n    auxdata: 0xa265627a7a723158203241894aea96c15ab2002bc9e2ef61c9667836a5c8b205e282da7ea26b82b11164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260018060146101000a81548160ff0219169083151502179055506103e860025560fa6003554260045542600555600060065534801561004257600080fd5b506040516106623803806106628339818101604052602081101561006557600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061055b806101076000396000f3fe6080604052600436106100345760003560e01c806351b42b00146100855780639bc717f11461009c578063e4fc6b6d146100c7575b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806104d46023913960400191505060405180910390fd5b34801561009157600080fd5b5061009a6100de565b005b3480156100a857600080fd5b506100b16101f8565b6040518082815260200191505060405180910390f35b3480156100d357600080fd5b506100dc6101fe565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101865750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806104a16033913960400191505060405180910390fd5b6000600160146101000a81548160ff021916908315150217905550565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806104f76030913960400191505060405180910390fd5b60011515600160149054906101000a900460ff16151514610384576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b4260055411156103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f6e6520756c61000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6002546006541115610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6275206e65646972206c6f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b61016d6005600082825401925050819055506103e8600654111561049e576103e86006819055505b56fe596f7520617265206e6f7420617574686f72697a656420746f2064656163746976617465207468697320636f6e74726163742e446f206e6f742073656e6420457468657220746f207468697320636f6e747261637421596f7520617265206e6f7420617574686f72697a656420746f2065786563757465207468697320636f6e74726163742ea265627a7a723158203241894aea96c15ab2002bc9e2ef61c9667836a5c8b205e282da7ea26b82b11164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x2 SSTORE PUSH1 0xFA PUSH1 0x3 SSTORE TIMESTAMP PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x662 CODESIZE SUB DUP1 PUSH2 0x662 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x55B DUP1 PUSH2 0x107 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51B42B00 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x9BC717F1 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xE4FC6B6D EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4D4 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x186 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A1 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2A6 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4F7 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F6E7472616374206E6F74206163746976652E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6520756C610000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275206E65646972206C6F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16D PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x49E JUMPI PUSH2 0x3E8 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP INVALID MSIZE PUSH16 0x7520617265206E6F7420617574686F72 PUSH10 0x7A656420746F20646561 PUSH4 0x74697661 PUSH21 0x65207468697320636F6E74726163742E446F206E6F PUSH21 0x2073656E6420457468657220746F20746869732063 PUSH16 0x6E747261637421596F7520617265206E PUSH16 0x7420617574686F72697A656420746F20 PUSH6 0x786563757465 KECCAK256 PUSH21 0x68697320636F6E74726163742EA265627A7A723158 KECCAK256 ORIGIN COINBASE DUP10 0x4A 0xEA SWAP7 0xC1 GAS 0xB2 STOP 0x2B 0xC9 0xE2 0xEF PUSH2 0xC966 PUSH25 0x36A5C8B205E282DA7EA26B82B11164736F6C63430005110032 ",
							"sourceMap": "50:2334:0:-;;;169:4;155:18;;;;;;;;;;;;;;;;;;;;342:4;322:24;;380:3;353:30;;408:3;390:21;;584:3;565:22;;627:1;594:34;;652:124;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:124:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;652:124:0;;;;;;;;;;;;;;;;727:10;709:15;;:28;;;;;;;;;;;;;;;;;;759:9;748:8;;:20;;;;;;;;;;;;;;;;;;652:124;50:2334;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806351b42b00146100855780639bc717f11461009c578063e4fc6b6d146100c7575b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806104d46023913960400191505060405180910390fd5b34801561009157600080fd5b5061009a6100de565b005b3480156100a857600080fd5b506100b16101f8565b6040518082815260200191505060405180910390f35b3480156100d357600080fd5b506100dc6101fe565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101865750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806104a16033913960400191505060405180910390fd5b6000600160146101000a81548160ff021916908315150217905550565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806104f76030913960400191505060405180910390fd5b60011515600160149054906101000a900460ff16151514610384576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b4260055411156103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f6e6520756c61000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6002546006541115610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6275206e65646972206c6f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b61016d6005600082825401925050819055506103e8600654111561049e576103e86006819055505b56fe596f7520617265206e6f7420617574686f72697a656420746f2064656163746976617465207468697320636f6e74726163742e446f206e6f742073656e6420457468657220746f207468697320636f6e747261637421596f7520617265206e6f7420617574686f72697a656420746f2065786563757465207468697320636f6e74726163742ea265627a7a723158203241894aea96c15ab2002bc9e2ef61c9667836a5c8b205e282da7ea26b82b11164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51B42B00 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x9BC717F1 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xE4FC6B6D EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4D4 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x186 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A1 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2A6 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4F7 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F6E7472616374206E6F74206163746976652E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6520756C610000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275206E65646972206C6F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16D PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x49E JUMPI PUSH2 0x3E8 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP INVALID MSIZE PUSH16 0x7520617265206E6F7420617574686F72 PUSH10 0x7A656420746F20646561 PUSH4 0x74697661 PUSH21 0x65207468697320636F6E74726163742E446F206E6F PUSH21 0x2073656E6420457468657220746F20746869732063 PUSH16 0x6E747261637421596F7520617265206E PUSH16 0x7420617574686F72697A656420746F20 PUSH6 0x786563757465 KECCAK256 PUSH21 0x68697320636F6E74726163742EA265627A7A723158 KECCAK256 ORIGIN COINBASE DUP10 0x4A 0xEA SWAP7 0xC1 GAS 0xB2 STOP 0x2B 0xC9 0xE2 0xEF PUSH2 0xC966 PUSH25 0x36A5C8B205E282DA7EA26B82B11164736F6C63430005110032 ",
							"sourceMap": "50:2334:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2328:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:192;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1979:192:0;;;:::i;:::-;;594:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:34:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;784:1109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:1109:0;;;:::i;:::-;;1979:192;2041:15;;;;;;;;;;;2027:29;;:10;:29;;;:55;;;;2074:8;;;;;;;;;;;2060:22;;:10;:22;;;2027:55;2019:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:5;2149:6;;:14;;;;;;;;;;;;;;;;;;1979:192::o;594:34::-;;;;:::o;784:1109::-;846:15;;;;;;;;;;;832:29;;:10;:29;;;:55;;;;879:8;;;;;;;;;;;865:22;;:10;:22;;;832:55;824:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;969:4;959:14;;:6;;;;;;;;;;;:14;;;951:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1252:3;1237:11;;:18;;1228:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:12;;1287:18;;:34;;1278:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:3;1429:11;;:18;;;;;;;;;;;1828:4;1807:18;;:25;1803:83;;;1870:4;1849:18;:25;;;;1803:83;784:1109::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "274200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"deactivate()": "infinite",
								"distribute()": "infinite",
								"distributed_shares()": "1005"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "MSTORE"
								},
								{
									"begin": 169,
									"end": 173,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "DUP1"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "EXP"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "DUP2"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "SLOAD"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "DUP2"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "MUL"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "NOT"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "AND"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "SWAP1"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "DUP4"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "ISZERO"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "ISZERO"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "MUL"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "OR"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "SWAP1"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "SSTORE"
								},
								{
									"begin": 155,
									"end": 173,
									"name": "POP"
								},
								{
									"begin": 342,
									"end": 346,
									"name": "PUSH",
									"value": "3E8"
								},
								{
									"begin": 322,
									"end": 346,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 322,
									"end": 346,
									"name": "SSTORE"
								},
								{
									"begin": 380,
									"end": 383,
									"name": "PUSH",
									"value": "FA"
								},
								{
									"begin": 353,
									"end": 383,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 353,
									"end": 383,
									"name": "SSTORE"
								},
								{
									"begin": 408,
									"end": 411,
									"name": "TIMESTAMP"
								},
								{
									"begin": 390,
									"end": 411,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 390,
									"end": 411,
									"name": "SSTORE"
								},
								{
									"begin": 584,
									"end": 587,
									"name": "TIMESTAMP"
								},
								{
									"begin": 565,
									"end": 587,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 565,
									"end": 587,
									"name": "SSTORE"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 594,
									"end": 628,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 594,
									"end": 628,
									"name": "SSTORE"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "MLOAD"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "PUSHSIZE"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "CODESIZE"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SUB"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "PUSHSIZE"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP4"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "CODECOPY"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP2"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP2"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "ADD"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP2"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "ADD"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "DUP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "MLOAD"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "ADD"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP3"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP2"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "SWAP1"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "POP"
								},
								{
									"begin": 727,
									"end": 737,
									"name": "CALLER"
								},
								{
									"begin": 709,
									"end": 724,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 724,
									"name": "DUP1"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "EXP"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "DUP2"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "SLOAD"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "DUP2"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "MUL"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "NOT"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "AND"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "DUP4"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "AND"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "MUL"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "OR"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "SSTORE"
								},
								{
									"begin": 709,
									"end": 737,
									"name": "POP"
								},
								{
									"begin": 759,
									"end": 768,
									"name": "DUP1"
								},
								{
									"begin": 748,
									"end": 756,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 748,
									"end": 756,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "EXP"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "DUP2"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "SLOAD"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "DUP2"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "MUL"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "NOT"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "AND"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "SWAP1"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "DUP4"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "AND"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "MUL"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "OR"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "SWAP1"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "SSTORE"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 776,
									"name": "POP"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "DUP1"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "CODECOPY"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 50,
									"end": 2384,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203241894aea96c15ab2002bc9e2ef61c9667836a5c8b205e282da7ea26b82b11164736f6c63430005110032",
									".code": [
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "LT"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "SHR"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "51B42B00"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "EQ"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "9BC717F1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "EQ"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH",
											"value": "E4FC6B6D"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "EQ"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "MLOAD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP3"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SUB"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP3"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH data",
											"value": "68F702E6388D2518088E18365EAA062FD5393371528035CDD118DD91CF2FD66B"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "CODECOPY"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "MLOAD"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "DUP1"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SWAP2"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SUB"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2373,
											"name": "REVERT"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "JUMPDEST"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "POP"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "JUMPDEST"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "STOP"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "MLOAD"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "DUP3"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "MSTORE"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "SWAP2"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "MLOAD"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "SWAP2"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "SUB"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "RETURN"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "STOP"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "JUMPDEST"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SLOAD"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "EXP"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DIV"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND"
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "AND"
										},
										{
											"begin": 2027,
											"end": 2037,
											"name": "CALLER"
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "AND"
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "EQ"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "DUP1"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "JUMPI"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "POP"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "SLOAD"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "EXP"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "DIV"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "AND"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "AND"
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "CALLER"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "AND"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "EQ"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2027,
											"end": 2082,
											"name": "JUMPDEST"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMPI"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "MLOAD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP3"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SUB"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP3"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH data",
											"value": "44FE763B3AC121D9373B3116501483B74BC02AC33C1BE16C96619643C2E17C04"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "CODECOPY"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "MLOAD"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SUB"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "REVERT"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMPDEST"
										},
										{
											"begin": 2158,
											"end": 2163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "EXP"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "SLOAD"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "MUL"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "NOT"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "AND"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "SWAP1"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "DUP4"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "MUL"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "OR"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "SWAP1"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "SSTORE"
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 1979,
											"end": 2171,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "SLOAD"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "DUP1"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "SLOAD"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "EXP"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "DIV"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 832,
											"end": 861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "CALLER"
										},
										{
											"begin": 832,
											"end": 861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 832,
											"end": 861,
											"name": "EQ"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "DUP1"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "JUMPI"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "POP"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "SWAP1"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "SLOAD"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "SWAP1"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "EXP"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "SWAP1"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "DIV"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 887,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 887,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 875,
											"name": "CALLER"
										},
										{
											"begin": 865,
											"end": 887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 887,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 887,
											"name": "EQ"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 832,
											"end": 887,
											"name": "JUMPDEST"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "JUMPI"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "MLOAD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "MSTORE"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "ADD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "ADD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP3"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SUB"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP3"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "MSTORE"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "MSTORE"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "ADD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH data",
											"value": "BA2EE6CA50D86582F4490A3252728DE9A213982133B99A8712775A266AB39ACB"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "CODECOPY"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "ADD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "POP"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "POP"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "MLOAD"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SUB"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "SWAP1"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "REVERT"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 824,
											"end": 940,
											"name": "JUMPDEST"
										},
										{
											"begin": 969,
											"end": 973,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 959,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SLOAD"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "EXP"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DIV"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 959,
											"end": 965,
											"name": "AND"
										},
										{
											"begin": 959,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 973,
											"name": "EQ"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "JUMPI"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MLOAD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "SUB"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "436F6E7472616374206E6F74206163746976652E000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "SWAP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "MLOAD"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "SWAP2"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "SUB"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "REVERT"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 951,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1237,
											"end": 1248,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1237,
											"end": 1248,
											"name": "SLOAD"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "GT"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "JUMPI"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MLOAD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP3"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SUB"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP3"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "6E6520756C610000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MLOAD"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP2"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SUB"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP1"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "REVERT"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "JUMPDEST"
										},
										{
											"begin": 1309,
											"end": 1321,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1309,
											"end": 1321,
											"name": "SLOAD"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "SLOAD"
										},
										{
											"begin": 1287,
											"end": 1321,
											"name": "GT"
										},
										{
											"begin": 1287,
											"end": 1321,
											"name": "ISZERO"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "JUMPI"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MLOAD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP3"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "SUB"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP3"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "6275206E65646972206C6F000000000000000000000000000000000000000000"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "SWAP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "MLOAD"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "SWAP2"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "SUB"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "SWAP1"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "REVERT"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1278,
											"end": 1337,
											"name": "JUMPDEST"
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "PUSH",
											"value": "16D"
										},
										{
											"begin": 1429,
											"end": 1440,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1429,
											"end": 1440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "DUP3"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "DUP3"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SLOAD"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "ADD"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SWAP3"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SWAP1"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SSTORE"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "SLOAD"
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "GT"
										},
										{
											"begin": 1803,
											"end": 1886,
											"name": "ISZERO"
										},
										{
											"begin": 1803,
											"end": 1886,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1803,
											"end": 1886,
											"name": "JUMPI"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1849,
											"end": 1874,
											"name": "DUP2"
										},
										{
											"begin": 1849,
											"end": 1874,
											"name": "SWAP1"
										},
										{
											"begin": 1849,
											"end": 1874,
											"name": "SSTORE"
										},
										{
											"begin": 1849,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1886,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1803,
											"end": 1886,
											"name": "JUMPDEST"
										},
										{
											"begin": 784,
											"end": 1893,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"44FE763B3AC121D9373B3116501483B74BC02AC33C1BE16C96619643C2E17C04": "596f7520617265206e6f7420617574686f72697a656420746f2064656163746976617465207468697320636f6e74726163742e",
										"68F702E6388D2518088E18365EAA062FD5393371528035CDD118DD91CF2FD66B": "446f206e6f742073656e6420457468657220746f207468697320636f6e747261637421",
										"BA2EE6CA50D86582F4490A3252728DE9A213982133B99A8712775A266AB39ACB": "596f7520617265206e6f7420617574686f72697a656420746f2065786563757465207468697320636f6e74726163742e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"deactivate()": "51b42b00",
							"distribute()": "e4fc6b6d",
							"distributed_shares()": "9bc717f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_employee\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"deactivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributed_shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/DeferredEquityPlan.sol\":\"DeferredEquityPlan\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DeferredEquityPlan.sol\":{\"keccak256\":\"0x336160e67e19f99f4fc5ef7f31acf98ee69668185f738d8c4302cf8d275b8dac\",\"urls\":[\"bzz-raw://0e45395eed0292cb116a06049664dd0349a8b9789938ab0305c57f87b4cb4be8\",\"dweb:/ipfs/QmbJsiSAD6oRy3zdqx6HMUxRWDy2x4bafMicqP1KfRDRg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "human_resources",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "employee",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 8,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "active",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 11,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "total_shares",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "annual_distribution",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "start_time",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "unlock_time",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/DeferredEquityPlan.sol:DeferredEquityPlan",
								"label": "distributed_shares",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/DeferredEquityPlan.sol": {
				"ast": {
					"absolutePath": "contracts/DeferredEquityPlan.sol",
					"exportedSymbols": {
						"DeferredEquityPlan": [
							119
						]
					},
					"id": 120,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "DeferredEquityPlan",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "human_resources",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "85:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "employee",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "117:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "117:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"name": "active",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "155:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "155:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74727565",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "169:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"name": "total_shares",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "322:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "322:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "342:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "annual_distribution",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "353:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "353:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323530",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "380:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "start_time",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "390:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "390:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 16,
										"name": "now",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "408:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "unlock_time",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "565:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 19,
										"name": "now",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "584:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"name": "distributed_shares",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "594:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "627:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "698:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "human_resources",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "709:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "727:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "727:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "709:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "709:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "employee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "748:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "_employee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "759:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "748:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "748:20:0"
											}
										]
									},
									"documentation": null,
									"id": 38,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "_employee",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "664:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "663:27:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:0"
									},
									"scope": 119,
									"src": "652:124:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "813:1080:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 42,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "832:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "832:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 44,
																	"name": "human_resources",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "846:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "832:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 46,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "865:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "865:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 48,
																	"name": "employee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "879:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "865:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "832:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520617265206e6f7420617574686f72697a656420746f2065786563757465207468697320636f6e74726163742e",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "889:50:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba2ee6ca50d86582f4490a3252728de9a213982133b99a8712775a266ab39acb",
																"typeString": "literal_string \"You are not authorized to execute this contract.\""
															},
															"value": "You are not authorized to execute this contract."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba2ee6ca50d86582f4490a3252728de9a213982133b99a8712775a266ab39acb",
																"typeString": "literal_string \"You are not authorized to execute this contract.\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:116:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "824:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "active",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "959:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "969:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "959:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e7472616374206e6f74206163746976652e",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22aba578f4f769b5c398ca410c1c671b4ddd18388caba92ed0158d4b8381a979",
																"typeString": "literal_string \"Contract not active.\""
															},
															"value": "Contract not active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22aba578f4f769b5c398ca410c1c671b4ddd18388caba92ed0158d4b8381a979",
																"typeString": "literal_string \"Contract not active.\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "951:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "unlock_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1237:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "1252:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1237:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6520756c61",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1257:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b114a055c6fe26513480afaa780d465f3cb376a6639ce86b16cb6aece740f12f",
																"typeString": "literal_string \"ne ula\""
															},
															"value": "ne ula"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b114a055c6fe26513480afaa780d465f3cb376a6639ce86b16cb6aece740f12f",
																"typeString": "literal_string \"ne ula\""
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "1228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1228:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1228:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "distributed_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1287:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 70,
																"name": "total_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1309:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1287:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275206e65646972206c6f",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1323:13:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8effd1b94a4bbba40ae21c4e606ce14beefbb6fdbe02df3dbaae5a990435fc30",
																"typeString": "literal_string \"bu nedir lo\""
															},
															"value": "bu nedir lo"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8effd1b94a4bbba40ae21c4e606ce14beefbb6fdbe02df3dbaae5a990435fc30",
																"typeString": "literal_string \"bu nedir lo\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "1278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1278:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "unlock_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1429:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "333635",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1444:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_365_by_1",
															"typeString": "int_const 365"
														},
														"value": "365"
													},
													"src": "1429:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1429:18:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "distributed_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1807:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1807:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 87,
												"nodeType": "IfStatement",
												"src": "1803:83:0",
												"trueBody": {
													"id": 86,
													"nodeType": "Block",
													"src": "1834:52:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 82,
																	"name": "distributed_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1849:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31303030",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1870:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "1849:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "1849:25:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "813:0:0"
									},
									"scope": 119,
									"src": "784:1109:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2008:163:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 93,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2027:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2027:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "human_resources",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "2041:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2027:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 97,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2060:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2060:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 99,
																	"name": "employee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "2074:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "2060:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2027:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520617265206e6f7420617574686f72697a656420746f2064656163746976617465207468697320636f6e74726163742e",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44fe763b3ac121d9373b3116501483b74bc02ac33c1be16c96619643c2e17c04",
																"typeString": "literal_string \"You are not authorized to deactivate this contract.\""
															},
															"value": "You are not authorized to deactivate this contract."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44fe763b3ac121d9373b3116501483b74bc02ac33c1be16c96619643c2e17c04",
																"typeString": "literal_string \"You are not authorized to deactivate this contract.\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "2019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2019:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2149:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2158:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2149:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2149:14:0"
											}
										]
									},
									"documentation": null,
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deactivate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:0"
									},
									"scope": 119,
									"src": "1979:192:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "2317:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "446f206e6f742073656e6420457468657220746f207468697320636f6e747261637421",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2335:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68f702e6388d2518088e18365eaa062fd5393371528035cdd118dd91cf2fd66b",
																"typeString": "literal_string \"Do not send Ether to this contract!\""
															},
															"value": "Do not send Ether to this contract!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_68f702e6388d2518088e18365eaa062fd5393371528035cdd118dd91cf2fd66b",
																"typeString": "literal_string \"Do not send Ether to this contract!\""
															}
														],
														"id": 113,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															140
														],
														"referencedDeclaration": 140,
														"src": "2328:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "2328:45:0"
											}
										]
									},
									"documentation": null,
									"id": 118,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2317:0:0"
									},
									"scope": 119,
									"src": "2289:92:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 120,
							"src": "50:2334:0"
						}
					],
					"src": "0:2384:0"
				},
				"id": 0
			}
		}
	}
}