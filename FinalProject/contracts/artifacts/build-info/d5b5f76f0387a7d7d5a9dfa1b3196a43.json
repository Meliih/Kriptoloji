{
	"id": "d5b5f76f0387a7d7d5a9dfa1b3196a43",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AssociateProfitSplitter.sol": {
				"content": "pragma solidity ^0.5.0;\r\ncontract AssociateProfitSplitter {\r\n    // @TODO: Create three payable addresses representing `employee_one`, `employee_two` and `employee_three`.\r\n    address payable employee_one;\r\n    address payable employee_two;\r\n    address payable employee_three;\r\n    \r\n       constructor(address payable _one, address payable _two, address payable _three) public {\r\n        employee_one = _one;\r\n        employee_two = _two;\r\n        employee_three = _three;\r\n       }\r\n        \r\n        function balance() public view returns(uint) {\r\n        return address(this).balance;\r\n        }\r\n\r\n    function deposit() public payable {\r\n        // @TODO: Split `msg.value` into three\r\n        uint amount = msg.value/3; // Your code here!\r\n        // @TODO: Transfer the amount to each employee\r\n        employee_one.transfer(amount);\r\n        employee_two.transfer(amount);\r\n        employee_three.transfer(amount);\r\n        // @TODO: take care of a potential remainder by sending back to HR (`msg.sender`)\r\n        msg.sender.transfer(msg.value-amount*3);\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/AssociateProfitSplitter.sol": {
				"AssociateProfitSplitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_one",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_two",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_three",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/AssociateProfitSplitter.sol\":25:1086  contract AssociateProfitSplitter {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AssociateProfitSplitter.sol\":293:485  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/AssociateProfitSplitter.sol\":293:485  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/AssociateProfitSplitter.sol\":293:485  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/AssociateProfitSplitter.sol\":406:410  _one */\n  dup3\n    /* \"contracts/AssociateProfitSplitter.sol\":391:403  employee_one */\n  0x00\n  dup1\n    /* \"contracts/AssociateProfitSplitter.sol\":391:410  employee_one = _one */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AssociateProfitSplitter.sol\":436:440  _two */\n  dup2\n    /* \"contracts/AssociateProfitSplitter.sol\":421:433  employee_two */\n  0x01\n  0x00\n    /* \"contracts/AssociateProfitSplitter.sol\":421:440  employee_two = _two */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AssociateProfitSplitter.sol\":468:474  _three */\n  dup1\n    /* \"contracts/AssociateProfitSplitter.sol\":451:465  employee_three */\n  0x02\n  0x00\n    /* \"contracts/AssociateProfitSplitter.sol\":451:474  employee_three = _three */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AssociateProfitSplitter.sol\":293:485  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/AssociateProfitSplitter.sol\":25:1086  contract AssociateProfitSplitter {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AssociateProfitSplitter.sol\":25:1086  contract AssociateProfitSplitter {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb69ef8a8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AssociateProfitSplitter.sol\":505:601  function balance() public view returns(uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"contracts/AssociateProfitSplitter.sol\":505:601  function balance() public view returns(uint) {\r... */\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AssociateProfitSplitter.sol\":609:1083  function deposit() public payable {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/AssociateProfitSplitter.sol\":505:601  function balance() public view returns(uint) {\r... */\n    tag_6:\n        /* \"contracts/AssociateProfitSplitter.sol\":544:548  uint */\n      0x00\n        /* \"contracts/AssociateProfitSplitter.sol\":568:589  address(this).balance */\n      selfbalance\n        /* \"contracts/AssociateProfitSplitter.sol\":561:589  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":505:601  function balance() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/AssociateProfitSplitter.sol\":609:1083  function deposit() public payable {\r... */\n    tag_8:\n        /* \"contracts/AssociateProfitSplitter.sol\":702:713  uint amount */\n      0x00\n        /* \"contracts/AssociateProfitSplitter.sol\":726:727  3 */\n      0x03\n        /* \"contracts/AssociateProfitSplitter.sol\":716:725  msg.value */\n      callvalue\n        /* \"contracts/AssociateProfitSplitter.sol\":716:727  msg.value/3 */\n      dup2\n      tag_11\n      jumpi\n      invalid\n    tag_11:\n      div\n        /* \"contracts/AssociateProfitSplitter.sol\":702:727  uint amount = msg.value/3 */\n      swap1\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":813:825  employee_one */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":813:834  employee_one.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":813:842  employee_one.transfer(amount) */\n      0x08fc\n        /* \"contracts/AssociateProfitSplitter.sol\":835:841  amount */\n      dup3\n        /* \"contracts/AssociateProfitSplitter.sol\":813:842  employee_one.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/AssociateProfitSplitter.sol\":813:842  employee_one.transfer(amount) */\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":853:865  employee_two */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":853:874  employee_two.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":853:882  employee_two.transfer(amount) */\n      0x08fc\n        /* \"contracts/AssociateProfitSplitter.sol\":875:881  amount */\n      dup3\n        /* \"contracts/AssociateProfitSplitter.sol\":853:882  employee_two.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/AssociateProfitSplitter.sol\":853:882  employee_two.transfer(amount) */\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":893:907  employee_three */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":893:916  employee_three.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":893:924  employee_three.transfer(amount) */\n      0x08fc\n        /* \"contracts/AssociateProfitSplitter.sol\":917:923  amount */\n      dup3\n        /* \"contracts/AssociateProfitSplitter.sol\":893:924  employee_three.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/AssociateProfitSplitter.sol\":893:924  employee_three.transfer(amount) */\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":1026:1036  msg.sender */\n      caller\n        /* \"contracts/AssociateProfitSplitter.sol\":1026:1045  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AssociateProfitSplitter.sol\":1026:1065  msg.sender.transfer(msg.value-amount*3) */\n      0x08fc\n        /* \"contracts/AssociateProfitSplitter.sol\":1063:1064  3 */\n      0x03\n        /* \"contracts/AssociateProfitSplitter.sol\":1056:1062  amount */\n      dup4\n        /* \"contracts/AssociateProfitSplitter.sol\":1056:1064  amount*3 */\n      mul\n        /* \"contracts/AssociateProfitSplitter.sol\":1046:1055  msg.value */\n      callvalue\n        /* \"contracts/AssociateProfitSplitter.sol\":1046:1064  msg.value-amount*3 */\n      sub\n        /* \"contracts/AssociateProfitSplitter.sol\":1026:1065  msg.sender.transfer(msg.value-amount*3) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/AssociateProfitSplitter.sol\":1026:1065  msg.sender.transfer(msg.value-amount*3) */\n      pop\n        /* \"contracts/AssociateProfitSplitter.sol\":609:1083  function deposit() public payable {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820c50c1265c78ab4415283aeae0f7d2d6c7d80b6de70aca2b34a29f435ee938cf164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103643803806103648339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506102388061012c6000396000f3fe6080604052600436106100295760003560e01c8063b69ef8a81461002e578063d0e30db014610059575b600080fd5b34801561003a57600080fd5b50610043610063565b6040518082815260200191505060405180910390f35b61006161006b565b005b600047905090565b60006003348161007757fe5b0490506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561014a573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101b3573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc6003830234039081150290604051600060405180830381858888f193505050501580156101ff573d6000803e3d6000fd5b505056fea265627a7a72315820c50c1265c78ab4415283aeae0f7d2d6c7d80b6de70aca2b34a29f435ee938cf164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x364 CODESIZE SUB DUP1 PUSH2 0x364 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x238 DUP1 PUSH2 0x12C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 CALLVALUE DUP2 PUSH2 0x77 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 DUP4 MUL CALLVALUE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xC SLT PUSH6 0xC78AB4415283 0xAE 0xAE 0xF PUSH30 0x2D6C7D80B6DE70ACA2B34A29F435EE938CF164736F6C6343000511003200 ",
							"sourceMap": "25:1061:0:-;;;293:192;8:9:-1;5:2;;;30:1;27;20:12;5:2;293:192:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;293:192:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:4;391:12;;:19;;;;;;;;;;;;;;;;;;436:4;421:12;;:19;;;;;;;;;;;;;;;;;;468:6;451:14;;:23;;;;;;;;;;;;;;;;;;293:192;;;25:1061;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063b69ef8a81461002e578063d0e30db014610059575b600080fd5b34801561003a57600080fd5b50610043610063565b6040518082815260200191505060405180910390f35b61006161006b565b005b600047905090565b60006003348161007757fe5b0490506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561014a573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101b3573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc6003830234039081150290604051600060405180830381858888f193505050501580156101ff573d6000803e3d6000fd5b505056fea265627a7a72315820c50c1265c78ab4415283aeae0f7d2d6c7d80b6de70aca2b34a29f435ee938cf164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 CALLVALUE DUP2 PUSH2 0x77 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 DUP4 MUL CALLVALUE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xC SLT PUSH6 0xC78AB4415283 0xAE 0xAE 0xF PUSH30 0x2D6C7D80B6DE70ACA2B34A29F435EE938CF164736F6C6343000511003200 ",
							"sourceMap": "25:1061:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;505:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:96:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;609:474;;;:::i;:::-;;505:96;544:4;568:21;561:28;;505:96;:::o;609:474::-;702:11;726:1;716:9;:11;;;;;;702:25;;813:12;;;;;;;;;;;:21;;:29;835:6;813:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:29:0;853:12;;;;;;;;;;;:21;;:29;875:6;853:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;853:29:0;893:14;;;;;;;;;;;:23;;:31;917:6;893:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;893:31:0;1026:10;:19;;:39;1063:1;1056:6;:8;1046:9;:18;1026:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1026:39:0;609:474;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance()": "193",
								"deposit()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "MSTORE"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "MLOAD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSHSIZE"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "CODESIZE"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SUB"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSHSIZE"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP4"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "CODECOPY"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "ADD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "ADD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "MLOAD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "ADD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP3"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "MLOAD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "ADD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP3"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "MLOAD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "ADD"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP3"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP2"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 406,
									"end": 410,
									"name": "DUP3"
								},
								{
									"begin": 391,
									"end": 403,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 391,
									"end": 403,
									"name": "DUP1"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "EXP"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "DUP2"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "SLOAD"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "DUP2"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "MUL"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "NOT"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "AND"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "SWAP1"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "DUP4"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "AND"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "MUL"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "OR"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "SWAP1"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "SSTORE"
								},
								{
									"begin": 391,
									"end": 410,
									"name": "POP"
								},
								{
									"begin": 436,
									"end": 440,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 433,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 421,
									"end": 433,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "EXP"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SLOAD"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "MUL"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "NOT"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "AND"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SWAP1"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP4"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "AND"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "MUL"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "OR"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SWAP1"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SSTORE"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "POP"
								},
								{
									"begin": 468,
									"end": 474,
									"name": "DUP1"
								},
								{
									"begin": 451,
									"end": 465,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 451,
									"end": 465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "EXP"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "SLOAD"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "MUL"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "NOT"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "AND"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "SWAP1"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "DUP4"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "AND"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "MUL"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "OR"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "SWAP1"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "SSTORE"
								},
								{
									"begin": 451,
									"end": 474,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1086,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c50c1265c78ab4415283aeae0f7d2d6c7d80b6de70aca2b34a29f435ee938cf164736f6c63430005110032",
									".code": [
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "B69EF8A8"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1086,
											"name": "REVERT"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "MLOAD"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "DUP3"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "MSTORE"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "MLOAD"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SUB"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "RETURN"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "STOP"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "SELFBALANCE"
										},
										{
											"begin": 561,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 561,
											"end": 589,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 601,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "CALLVALUE"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "DUP2"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "JUMPI"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "INVALID"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "JUMPDEST"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "DIV"
										},
										{
											"begin": 702,
											"end": 727,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 727,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "DUP1"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "SLOAD"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "EXP"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "DIV"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 825,
											"name": "AND"
										},
										{
											"begin": 813,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP3"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP2"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "MUL"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "MLOAD"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "MLOAD"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP4"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "SUB"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP2"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP6"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP9"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "DUP9"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "CALL"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "SWAP4"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 813,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "SLOAD"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "EXP"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "DIV"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP3"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "ISZERO"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "MUL"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "MLOAD"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "MLOAD"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP1"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP4"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SUB"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP6"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP9"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP9"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "CALL"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP4"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "SLOAD"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "EXP"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "DIV"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 907,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 916,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "MUL"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "MLOAD"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "MLOAD"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP1"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP4"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "SUB"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP6"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP9"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP9"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "CALL"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "SWAP4"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1036,
											"name": "CALLER"
										},
										{
											"begin": 1026,
											"end": 1045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1045,
											"name": "AND"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4"
										},
										{
											"begin": 1056,
											"end": 1064,
											"name": "MUL"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "CALLVALUE"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "ISZERO"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "MUL"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "MLOAD"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "MLOAD"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP4"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "SUB"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP6"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP9"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "DUP9"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "CALL"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "SWAP4"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 1083,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"deposit()": "d0e30db0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_one\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_two\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_three\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/AssociateProfitSplitter.sol\":\"AssociateProfitSplitter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AssociateProfitSplitter.sol\":{\"keccak256\":\"0x67b08849938a7761b83faf59f72e141eaea609992b079b4baad27795e596e69f\",\"urls\":[\"bzz-raw://07aa21ba4cde61d8e745fbfe1c5e27e9494b9ca7580670f2b4f641c9ed3b0e7a\",\"dweb:/ipfs/QmTxaTHhAZrMXe9bpzJ5ASrdgYqAkdKRiy4d7afnoexwP3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/AssociateProfitSplitter.sol:AssociateProfitSplitter",
								"label": "employee_one",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "contracts/AssociateProfitSplitter.sol:AssociateProfitSplitter",
								"label": "employee_two",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 7,
								"contract": "contracts/AssociateProfitSplitter.sol:AssociateProfitSplitter",
								"label": "employee_three",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/AssociateProfitSplitter.sol": {
				"ast": {
					"absolutePath": "contracts/AssociateProfitSplitter.sol",
					"exportedSymbols": {
						"AssociateProfitSplitter": [
							83
						]
					},
					"id": 84,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "AssociateProfitSplitter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "employee_one",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "177:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "employee_two",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "212:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "212:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "employee_three",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "247:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "247:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "380:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "employee_one",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "391:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "_one",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "406:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "391:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "391:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "employee_two",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "421:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "_two",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "436:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "421:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "421:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "employee_three",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "451:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "_three",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "468:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "451:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "451:23:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_one",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "305:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"name": "_two",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "327:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"name": "_three",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "349:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "304:68:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:0"
									},
									"scope": 83,
									"src": "293:192:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "550:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 35,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "576:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AssociateProfitSplitter_$83",
																	"typeString": "contract AssociateProfitSplitter"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AssociateProfitSplitter_$83",
																	"typeString": "contract AssociateProfitSplitter"
																}
															],
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "568:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "568:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 38,
												"nodeType": "Return",
												"src": "561:28:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "544:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "543:6:0"
									},
									"scope": 83,
									"src": "505:96:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "643:440:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "702:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 45,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "716:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "716:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "702:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 53,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 50,
															"name": "employee_one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "813:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "813:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 59,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 56,
															"name": "employee_two",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "853:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "853:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "853:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "employee_three",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "893:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "893:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "893:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1046:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1046:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 75,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1056:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "33",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1063:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "1056:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1046:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 68,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "1026:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1026:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1026:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1026:39:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:0"
									},
									"scope": 83,
									"src": "609:474:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 84,
							"src": "25:1061:0"
						}
					],
					"src": "0:1086:0"
				},
				"id": 0
			}
		}
	}
}