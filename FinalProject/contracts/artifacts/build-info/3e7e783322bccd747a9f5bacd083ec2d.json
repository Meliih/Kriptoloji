{
	"id": "3e7e783322bccd747a9f5bacd083ec2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TieredProfitSplitter.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n// lvl 2: tiered split\r\ncontract TieredProfitSplitter {\r\n    address payable employee_one; // ceo\r\n    address payable employee_two; // cto\r\n    address payable employee_three; // bob\r\n\r\n    constructor(address payable _one, address payable _two, address payable _three) public {\r\n        employee_one = _one;\r\n        employee_two = _two;\r\n        employee_three = _three;\r\n    }\r\n\r\n    // Should always return 0! Use this to test your `deposit` function's logic\r\n    function balance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function deposit() public payable {\r\n        uint points = msg.value / 100; // Calculates rudimentary percentage by dividing msg.value into 100 units\r\n        uint total;\r\n        uint amount;\r\n\r\n        // @TODO: Calculate and transfer the distribution percentage\r\n        // Step 1: Set amount to equal `points` * the number of percentage points for this employee\r\n        // Step 2: Add the `amount` to `total` to keep a running total\r\n        // Step 3: Transfer the `amount` to the employee\r\n       amount = points * 60;\r\n       total += amount;\r\n       employee_one.transfer(amount);\r\n\r\n          // @TODO: Repeat the previous steps for `employee_two` and `employee_three`\r\n  \r\n       amount = points * 25;\r\n       total += amount;\r\n       employee_two.transfer(amount);\r\n\r\n\r\n       amount = points * 15;\r\n       total += amount;\r\n       employee_three.transfer(amount);\r\n       \r\n       employee_one.transfer(msg.value - total); // ceo gets the remaining wei\r\n    }\r\n\r\n    function() external payable {\r\n        deposit();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TieredProfitSplitter.sol": {
				"TieredProfitSplitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_one",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_two",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_three",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/TieredProfitSplitter.sol\":51:1635  contract TieredProfitSplitter {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TieredProfitSplitter.sol\":218:407  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TieredProfitSplitter.sol\":218:407  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/TieredProfitSplitter.sol\":218:407  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/TieredProfitSplitter.sol\":331:335  _one */\n  dup3\n    /* \"contracts/TieredProfitSplitter.sol\":316:328  employee_one */\n  0x00\n  dup1\n    /* \"contracts/TieredProfitSplitter.sol\":316:335  employee_one = _one */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TieredProfitSplitter.sol\":361:365  _two */\n  dup2\n    /* \"contracts/TieredProfitSplitter.sol\":346:358  employee_two */\n  0x01\n  0x00\n    /* \"contracts/TieredProfitSplitter.sol\":346:365  employee_two = _two */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TieredProfitSplitter.sol\":393:399  _three */\n  dup1\n    /* \"contracts/TieredProfitSplitter.sol\":376:390  employee_three */\n  0x02\n  0x00\n    /* \"contracts/TieredProfitSplitter.sol\":376:399  employee_three = _three */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TieredProfitSplitter.sol\":218:407  constructor(address payable _one, address payable _two, address payable _three) public {\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/TieredProfitSplitter.sol\":51:1635  contract TieredProfitSplitter {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TieredProfitSplitter.sol\":51:1635  contract TieredProfitSplitter {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb69ef8a8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"contracts/TieredProfitSplitter.sol\":1615:1624  deposit() */\n      tag_6\n        /* \"contracts/TieredProfitSplitter.sol\":1615:1622  deposit */\n      tag_7\n        /* \"contracts/TieredProfitSplitter.sol\":1615:1624  deposit() */\n      jump\t// in\n    tag_6:\n        /* \"contracts/TieredProfitSplitter.sol\":51:1635  contract TieredProfitSplitter {\r... */\n      stop\n        /* \"contracts/TieredProfitSplitter.sol\":496:588  function balance() public view returns(uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/TieredProfitSplitter.sol\":496:588  function balance() public view returns(uint) {\r... */\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TieredProfitSplitter.sol\":596:1568  function deposit() public payable {\r... */\n    tag_3:\n      tag_11\n      tag_7\n      jump\t// in\n    tag_11:\n      stop\n    tag_7:\n        /* \"contracts/TieredProfitSplitter.sol\":641:652  uint points */\n      0x00\n        /* \"contracts/TieredProfitSplitter.sol\":667:670  100 */\n      0x64\n        /* \"contracts/TieredProfitSplitter.sol\":655:664  msg.value */\n      callvalue\n        /* \"contracts/TieredProfitSplitter.sol\":655:670  msg.value / 100 */\n      dup2\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n      div\n        /* \"contracts/TieredProfitSplitter.sol\":641:670  uint points = msg.value / 100 */\n      swap1\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":755:765  uint total */\n      0x00\n        /* \"contracts/TieredProfitSplitter.sol\":776:787  uint amount */\n      dup1\n        /* \"contracts/TieredProfitSplitter.sol\":1118:1120  60 */\n      0x3c\n        /* \"contracts/TieredProfitSplitter.sol\":1109:1115  points */\n      dup4\n        /* \"contracts/TieredProfitSplitter.sol\":1109:1120  points * 60 */\n      mul\n        /* \"contracts/TieredProfitSplitter.sol\":1100:1120  amount = points * 60 */\n      swap1\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1139:1145  amount */\n      dup1\n        /* \"contracts/TieredProfitSplitter.sol\":1130:1145  total += amount */\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1155:1167  employee_one */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1155:1176  employee_one.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1155:1184  employee_one.transfer(amount) */\n      0x08fc\n        /* \"contracts/TieredProfitSplitter.sol\":1177:1183  amount */\n      dup3\n        /* \"contracts/TieredProfitSplitter.sol\":1155:1184  employee_one.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/TieredProfitSplitter.sol\":1155:1184  employee_one.transfer(amount) */\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1305:1307  25 */\n      0x19\n        /* \"contracts/TieredProfitSplitter.sol\":1296:1302  points */\n      dup4\n        /* \"contracts/TieredProfitSplitter.sol\":1296:1307  points * 25 */\n      mul\n        /* \"contracts/TieredProfitSplitter.sol\":1287:1307  amount = points * 25 */\n      swap1\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1326:1332  amount */\n      dup1\n        /* \"contracts/TieredProfitSplitter.sol\":1317:1332  total += amount */\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1342:1354  employee_two */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1342:1363  employee_two.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1342:1371  employee_two.transfer(amount) */\n      0x08fc\n        /* \"contracts/TieredProfitSplitter.sol\":1364:1370  amount */\n      dup3\n        /* \"contracts/TieredProfitSplitter.sol\":1342:1371  employee_two.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/TieredProfitSplitter.sol\":1342:1371  employee_two.transfer(amount) */\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1403:1405  15 */\n      0x0f\n        /* \"contracts/TieredProfitSplitter.sol\":1394:1400  points */\n      dup4\n        /* \"contracts/TieredProfitSplitter.sol\":1394:1405  points * 15 */\n      mul\n        /* \"contracts/TieredProfitSplitter.sol\":1385:1405  amount = points * 15 */\n      swap1\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1424:1430  amount */\n      dup1\n        /* \"contracts/TieredProfitSplitter.sol\":1415:1430  total += amount */\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1440:1454  employee_three */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1440:1463  employee_three.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1440:1471  employee_three.transfer(amount) */\n      0x08fc\n        /* \"contracts/TieredProfitSplitter.sol\":1464:1470  amount */\n      dup3\n        /* \"contracts/TieredProfitSplitter.sol\":1440:1471  employee_three.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/TieredProfitSplitter.sol\":1440:1471  employee_three.transfer(amount) */\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":1490:1502  employee_one */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1490:1511  employee_one.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TieredProfitSplitter.sol\":1490:1530  employee_one.transfer(msg.value - total) */\n      0x08fc\n        /* \"contracts/TieredProfitSplitter.sol\":1524:1529  total */\n      dup4\n        /* \"contracts/TieredProfitSplitter.sol\":1512:1521  msg.value */\n      callvalue\n        /* \"contracts/TieredProfitSplitter.sol\":1512:1529  msg.value - total */\n      sub\n        /* \"contracts/TieredProfitSplitter.sol\":1490:1530  employee_one.transfer(msg.value - total) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/TieredProfitSplitter.sol\":1490:1530  employee_one.transfer(msg.value - total) */\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":596:1568  function deposit() public payable {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TieredProfitSplitter.sol\":496:588  function balance() public view returns(uint) {\r... */\n    tag_10:\n        /* \"contracts/TieredProfitSplitter.sol\":535:539  uint */\n      0x00\n        /* \"contracts/TieredProfitSplitter.sol\":559:580  address(this).balance */\n      selfbalance\n        /* \"contracts/TieredProfitSplitter.sol\":552:580  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/TieredProfitSplitter.sol\":496:588  function balance() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820d275d93396a04c0922a955c8489538d08111769bb4808af89dbfa56acdb6d70d64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103ad3803806103ad8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506102818061012c6000396000f3fe6080604052600436106100295760003560e01c8063b69ef8a814610033578063d0e30db01461005e575b610031610068565b005b34801561003f57600080fd5b50610048610244565b6040518082815260200191505060405180910390f35b610066610068565b005b60006064348161007457fe5b049050600080603c8302905080820191506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156100ec573d6000803e3d6000fd5b506019830290508082019150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610160573d6000803e3d6000fd5b50600f830290508082019150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101d4573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8334039081150290604051600060405180830381858888f1935050505015801561023e573d6000803e3d6000fd5b50505050565b60004790509056fea265627a7a72315820d275d93396a04c0922a955c8489538d08111769bb4808af89dbfa56acdb6d70d64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3AD CODESIZE SUB DUP1 PUSH2 0x3AD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x281 DUP1 PUSH2 0x12C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x33 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x5E JUMPI JUMPDEST PUSH2 0x31 PUSH2 0x68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66 PUSH2 0x68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x64 CALLVALUE DUP2 PUSH2 0x74 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3C DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x19 DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x160 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xF DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 CALLVALUE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD2 PUSH22 0xD93396A04C0922A955C8489538D08111769BB4808AF8 SWAP14 0xBF 0xA5 PUSH11 0xCDB6D70D64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "51:1584:0:-;;;218:189;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:189:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;218:189:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:4;316:12;;:19;;;;;;;;;;;;;;;;;;361:4;346:12;;:19;;;;;;;;;;;;;;;;;;393:6;376:14;;:23;;;;;;;;;;;;;;;;;;218:189;;;51:1584;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063b69ef8a814610033578063d0e30db01461005e575b610031610068565b005b34801561003f57600080fd5b50610048610244565b6040518082815260200191505060405180910390f35b610066610068565b005b60006064348161007457fe5b049050600080603c8302905080820191506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156100ec573d6000803e3d6000fd5b506019830290508082019150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610160573d6000803e3d6000fd5b50600f830290508082019150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101d4573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8334039081150290604051600060405180830381858888f1935050505015801561023e573d6000803e3d6000fd5b50505050565b60004790509056fea265627a7a72315820d275d93396a04c0922a955c8489538d08111769bb4808af89dbfa56acdb6d70d64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x33 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x5E JUMPI JUMPDEST PUSH2 0x31 PUSH2 0x68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66 PUSH2 0x68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x64 CALLVALUE DUP2 PUSH2 0x74 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3C DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x19 DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x160 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xF DUP4 MUL SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 CALLVALUE SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD2 PUSH22 0xD93396A04C0922A955C8489538D08111769BB4808AF8 SWAP14 0xBF 0xA5 PUSH11 0xCDB6D70D64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "51:1584:0:-;;;;;;;;;;;;;;;;;;;;;;;1615:9;:7;:9::i;:::-;51:1584;496:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;596:972;;;:::i;:::-;;;641:11;667:3;655:9;:15;;;;;;641:29;;755:10;776:11;1118:2;1109:6;:11;1100:20;;1139:6;1130:15;;;;1155:12;;;;;;;;;;;:21;;:29;1177:6;1155:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1155:29:0;1305:2;1296:6;:11;1287:20;;1326:6;1317:15;;;;1342:12;;;;;;;;;;;:21;;:29;1364:6;1342:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1342:29:0;1403:2;1394:6;:11;1385:20;;1424:6;1415:15;;;;1440:14;;;;;;;;;;;:23;;:31;1464:6;1440:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1440:31:0;1490:12;;;;;;;;;;;:21;;:40;1524:5;1512:9;:17;1490:40;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1490:40:0;596:972;;;:::o;496:92::-;535:4;559:21;552:28;;496:92;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "128200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"balance()": "193",
								"deposit()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "MSTORE"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "MLOAD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSHSIZE"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "CODESIZE"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SUB"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSHSIZE"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP4"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "CODECOPY"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "ADD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "ADD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "MLOAD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "ADD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP3"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "MLOAD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "ADD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP3"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "DUP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "MLOAD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "ADD"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP3"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP2"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "SWAP1"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 331,
									"end": 335,
									"name": "DUP3"
								},
								{
									"begin": 316,
									"end": 328,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 316,
									"end": 328,
									"name": "DUP1"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "EXP"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "SLOAD"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "NOT"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "DUP4"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "OR"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "SSTORE"
								},
								{
									"begin": 316,
									"end": 335,
									"name": "POP"
								},
								{
									"begin": 361,
									"end": 365,
									"name": "DUP2"
								},
								{
									"begin": 346,
									"end": 358,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 346,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "EXP"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "DUP2"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "SLOAD"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "DUP2"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "MUL"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "NOT"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "AND"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "SWAP1"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "DUP4"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "AND"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "MUL"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "OR"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "SWAP1"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "SSTORE"
								},
								{
									"begin": 346,
									"end": 365,
									"name": "POP"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP1"
								},
								{
									"begin": 376,
									"end": 390,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 376,
									"end": 390,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "EXP"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "DUP2"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "SLOAD"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "DUP2"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "MUL"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "NOT"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "AND"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "SWAP1"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "DUP4"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "AND"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "MUL"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "OR"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "SWAP1"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "SSTORE"
								},
								{
									"begin": 376,
									"end": 399,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 218,
									"end": 407,
									"name": "POP"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "DUP1"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "CODECOPY"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 51,
									"end": 1635,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d275d93396a04c0922a955c8489538d08111769bb4808af89dbfa56acdb6d70d64736f6c63430005110032",
									".code": [
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "MSTORE"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "JUMPI"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "SHR"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "B69EF8A8"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "EQ"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "JUMPI"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "EQ"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "JUMPI"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "JUMPDEST"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1622,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 1635,
											"name": "STOP"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "MLOAD"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "MSTORE"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "ADD"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "SWAP2"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "MLOAD"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "SWAP2"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "SUB"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "SWAP1"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "RETURN"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "JUMPDEST"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "JUMPDEST"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "STOP"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 667,
											"end": 670,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "CALLVALUE"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "DUP2"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "JUMPI"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "INVALID"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 670,
											"name": "DIV"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "POP"
										},
										{
											"begin": 755,
											"end": 765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 776,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP4"
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "MUL"
										},
										{
											"begin": 1100,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP1"
										},
										{
											"begin": 1130,
											"end": 1145,
											"name": "DUP3"
										},
										{
											"begin": 1130,
											"end": 1145,
											"name": "ADD"
										},
										{
											"begin": 1130,
											"end": 1145,
											"name": "SWAP2"
										},
										{
											"begin": 1130,
											"end": 1145,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "SLOAD"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "EXP"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "DIV"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "ISZERO"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "MUL"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP4"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP6"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP9"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "DUP9"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "CALL"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "SWAP4"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DUP4"
										},
										{
											"begin": 1296,
											"end": 1307,
											"name": "MUL"
										},
										{
											"begin": 1287,
											"end": 1307,
											"name": "SWAP1"
										},
										{
											"begin": 1287,
											"end": 1307,
											"name": "POP"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP1"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "DUP3"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "ADD"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "SWAP2"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "SLOAD"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "EXP"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "DIV"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "AND"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP3"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP2"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "ISZERO"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "MUL"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "MLOAD"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "MLOAD"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP1"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP4"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "SUB"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP2"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP6"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP9"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "DUP9"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "CALL"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "SWAP4"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1342,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "DUP4"
										},
										{
											"begin": 1394,
											"end": 1405,
											"name": "MUL"
										},
										{
											"begin": 1385,
											"end": 1405,
											"name": "SWAP1"
										},
										{
											"begin": 1385,
											"end": 1405,
											"name": "POP"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP1"
										},
										{
											"begin": 1415,
											"end": 1430,
											"name": "DUP3"
										},
										{
											"begin": 1415,
											"end": 1430,
											"name": "ADD"
										},
										{
											"begin": 1415,
											"end": 1430,
											"name": "SWAP2"
										},
										{
											"begin": 1415,
											"end": 1430,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "SLOAD"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "EXP"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "DIV"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "AND"
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "MUL"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "MLOAD"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "MLOAD"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP4"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "SUB"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP2"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP6"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP9"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP9"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "CALL"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "SWAP4"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "DUP1"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "SLOAD"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "EXP"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "DIV"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1490,
											"end": 1511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1511,
											"name": "AND"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP4"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "CALLVALUE"
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "SUB"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "ISZERO"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "MUL"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "MLOAD"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "MLOAD"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP1"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP4"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "SUB"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP6"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP9"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "DUP9"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "CALL"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "SWAP4"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1490,
											"end": 1530,
											"name": "POP"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 596,
											"end": 1568,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 535,
											"end": 539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SELFBALANCE"
										},
										{
											"begin": 552,
											"end": 580,
											"name": "SWAP1"
										},
										{
											"begin": 552,
											"end": 580,
											"name": "POP"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "SWAP1"
										},
										{
											"begin": 496,
											"end": 588,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"deposit()": "d0e30db0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_one\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_two\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_three\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TieredProfitSplitter.sol\":\"TieredProfitSplitter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TieredProfitSplitter.sol\":{\"keccak256\":\"0x2c78375c1e335b1e5c400bca512518d209342967370698a371f1aba81268bd70\",\"urls\":[\"bzz-raw://fdc7f0f7615f264a1ab55f7fb2804ae85cca4372ab6361259f631bfd5fbc3262\",\"dweb:/ipfs/QmSP3Yn96boabsUcSBfJc9BzwMxWgjq1PDumMEejGSEUem\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/TieredProfitSplitter.sol:TieredProfitSplitter",
								"label": "employee_one",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "contracts/TieredProfitSplitter.sol:TieredProfitSplitter",
								"label": "employee_two",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 7,
								"contract": "contracts/TieredProfitSplitter.sol:TieredProfitSplitter",
								"label": "employee_three",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TieredProfitSplitter.sol": {
				"ast": {
					"absolutePath": "contracts/TieredProfitSplitter.sol",
					"exportedSymbols": {
						"TieredProfitSplitter": [
							122
						]
					},
					"id": 123,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "TieredProfitSplitter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "employee_one",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "88:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "employee_two",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "130:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "130:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "employee_three",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "172:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "172:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "305:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "employee_one",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "316:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "_one",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "331:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "316:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "316:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "employee_two",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "346:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "_two",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "361:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "346:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "346:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "employee_three",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "376:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "_three",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "393:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "376:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "376:23:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_one",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "230:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"name": "_two",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "252:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"name": "_three",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "274:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:68:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:0:0"
									},
									"scope": 122,
									"src": "218:189:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "541:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 35,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "567:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TieredProfitSplitter_$122",
																	"typeString": "contract TieredProfitSplitter"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TieredProfitSplitter_$122",
																	"typeString": "contract TieredProfitSplitter"
																}
															],
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "559:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "559:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "559:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 38,
												"nodeType": "Return",
												"src": "552:28:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:6:0"
									},
									"scope": 122,
									"src": "496:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "630:938:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "points",
														"nodeType": "VariableDeclaration",
														"scope": 113,
														"src": "641:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "641:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 45,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "655:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "655:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "667:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "655:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "641:29:0"
											},
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"name": "total",
														"nodeType": "VariableDeclaration",
														"scope": 113,
														"src": "755:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 50,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "755:10:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 113,
														"src": "776:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 53,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "776:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 57,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3630",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1118:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "1109:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1100:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1100:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1130:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1139:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1130:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1130:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 69,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1177:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 66,
															"name": "employee_one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1155:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1155:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1155:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1287:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 73,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1296:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3235",
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "1296:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1287:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1287:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 78,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1317:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 79,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1326:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1317:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1317:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 85,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 82,
															"name": "employee_two",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1342:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1342:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1342:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1394:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3135",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1403:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "15"
														},
														"src": "1394:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1385:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1385:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1415:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1424:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1415:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1415:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 101,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1464:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "employee_three",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1440:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1440:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1440:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1440:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1512:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1512:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "1524:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1512:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 104,
															"name": "employee_one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1490:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1490:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1490:40:0"
											}
										]
									},
									"documentation": null,
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:0"
									},
									"scope": 122,
									"src": "596:972:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1604:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1615:9:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:0"
									},
									"scope": 122,
									"src": "1576:56:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 123,
							"src": "51:1584:0"
						}
					],
					"src": "0:1637:0"
				},
				"id": 0
			}
		}
	}
}